name: iOS Deploy

on:
  push:
    branches:
      - master
      - production

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Xcode
        uses: actions/setup-xcode@v2

      - name: Install Fastlane
        run: gem install fastlane -N --no-document

      - name: Set Fastlane environment to non-interactive
        run: echo "FASTLANE_OPT_OUT_USAGE=1" >> $GITHUB_ENV

      - name: Flutter action
        uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: '3.13.2'
          cache: true

      - name: Set FLUTTER_ROOT
        run: echo "FLUTTER_ROOT=$RUNNER_WORKSPACE/flutter" >> $GITHUB_ENV

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Clear Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Caches/CocoaPods

      - name: Extract last commit message
        id: extract_commit_message
        run: echo "::set-output name=message::$(git log --format=%B -n 1)"

      - name: Check if last commit message contains 'deploy'
        id: check_deploy
        run: |
          if echo "${{ steps.extract_commit_message.outputs.message }}" | grep -qi 'deploy'; then
            echo "Deploy keyword found in commit message. Proceeding with deployment."
            echo "::set-output name=deploy::true"
          else
            echo "Deploy keyword not found in commit message. Skipping deployment."
            echo "::set-output name=deploy::false"
          fi

      - name: Build and Deploy to App Store
        if: steps.check_deploy.outputs.deploy == 'true'
        run: |
          cd ios
          gem install cocoapods -N --no-document
          bundle install
          echo "Installing pods..."
          bundle exec pod install
          echo "Running lane now..."

          if [ ${{ github.ref }} = 'refs/heads/production' ]; then
            bundle exec fastlane deployToAppStore
          else
            bundle exec fastlane deployToTestFlight
          fi
        env:
          APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
          BUNDLE_IDENTIFIER: ${{ secrets.BUNDLE_IDENTIFIER }}
          FASTLANE_APPLE_EMAIL_ID: ${{ secrets.FASTLANE_APPLE_EMAIL_ID }}
          GIT_AUTHORIZATION: ${{ secrets.GIT_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          TEMP_KEYCHAIN_PASSWORD: ${{ secrets.TEMP_KEYCHAIN_PASSWORD }}
          TEMP_KEYCHAIN_USER: ${{ secrets.TEMP_KEYCHAIN_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        working-directory: ios
